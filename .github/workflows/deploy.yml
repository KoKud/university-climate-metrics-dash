name: Configure Docker Swarm

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: environment
        required: true
        default: test

jobs:
  build-project-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'test' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare Docker image metadata
      id: project_meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/python-climate-dashboard
        tags: |
          type=raw,value=latest
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ steps.project_meta.outputs.tags }}
        labels: ${{ steps.project_meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'test' }}
    needs: 
    - build-project-and-push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add remote host to known_hosts
      run: |
        ssh-keyscan -H ${{ vars.REMOTE_HOST }} >> ~/.ssh/known_hosts 

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to Docker Swarm
      env:
        DOCKER_HOST: ssh://ubuntu@${{ vars.REMOTE_HOST }}
      run: |
        docker stack deploy --with-registry-auth -c swarm-${{ github.event.inputs.environment || 'test' }}.yml python-climate-dashboard